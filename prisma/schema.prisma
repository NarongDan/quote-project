// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String  @unique
  password String
  votes    Vote[]
  quotes   Quote[] @relation("UserQuotes")
}

model Quote {
  id         Int      @id @default(autoincrement())
  content    String
  authorName String // The name of the user who posts
  authorId   Int // Reference to the user who posted
  createdBy  User     @relation("UserQuotes", fields: [authorId], references: [id])
  votes      Vote[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([authorId]) // Optional index for faster queries by authorId
}

model Vote {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  quote   Quote @relation(fields: [quoteId], references: [id])
  quoteId Int

  @@unique([userId, quoteId]) // Ensures that a user can vote only once per quote
}
